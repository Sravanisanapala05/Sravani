import random

class VacuumEnvironment4x4:
    def __init__(self):
        # Initialize a 4x4 grid with random dirt placement
        self.grid = [[random.choice(['dirty', 'dirty', 'clean']) for _ in range(4)] for _ in range(4)]
        self.vacuum_position = (0, 0)  # Start at the top-left corner (0,0)
    
    def display_status(self):
        print("+---" * 4 + "+")  # Top border
        for i, row in enumerate(self.grid):
            row_display = "|"
            for j, cell in enumerate(row):
                if (i, j) == self.vacuum_position:
                    row_display += " V |"  # Mark the vacuum cleaner position
                else:
                    row_display += "   |" if cell == "clean" else " D |"
            print(row_display)
            print("+---" * 4 + "+")  # Bottom border of the row
    
    def is_clean(self):
        # Check if all tiles are clean
        return all(tile == 'clean' for row in self.grid for tile in row)
    
    def clean(self):
        x, y = self.vacuum_position
        if self.grid[x][y] == 'dirty':
            print(f"Cleaning tile at position {self.vacuum_position}")
            self.grid[x][y] = 'clean'
        else:
            print(f"Tile at {self.vacuum_position} is already clean.")
    
    def move(self):
        x, y = self.vacuum_position
        # Move to the next tile; if at the end of a row, move to the next row
        if y < 3:
            y += 1
        elif x < 3:
            x += 1
            y = 0
        else:
            print("Vacuum has visited all tiles.")
            return
        self.vacuum_position = (x, y)
        print(f"Moving to tile {self.vacuum_position}")

# Rule-Based Agent
def vacuum_agent_4x4(env):
    while not env.is_clean():
        env.clean()
        env.display_status()
        env.move()

# Initialize and Run
environment = VacuumEnvironment4x4()
print("Initial Environment Status:")
environment.display_status()

print("\nRunning the Vacuum Cleaner Agent...\n")
vacuum_agent_4x4(environment)

print("\nFinal Environment Status:")
environment.display_status()
