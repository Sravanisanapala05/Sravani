import random

def print_board(board):
    top = " ----------- "
    for row in board:
        print(top)
        print("| " + " | ".join(row) + " |")
    print(top)

def is_winner(board, player):
    # Check rows and columns
    for i in range(3):
        if all(board[i][j] == player for j in range(3)) or all(board[j][i] == player for j in range(3)):
            return True
    # Check diagonals
    return all(board[i][i] == player for i in range(3)) or all(board[i][2 - i] == player for i in range(3))

def is_draw(board):
    return all(cell != " " for row in board for cell in row)

def get_empty_cells(board):
    return [(r, c) for r in range(3) for c in range(3) if board[r][c] == " "]

def minimax(board, is_maximizing):
    if is_winner(board, "O"):
        return 1
    if is_winner(board, "X"):
        return -1
    if is_draw(board):
        return 0

    best_score = -float("inf") if is_maximizing else float("inf")
    for r, c in get_empty_cells(board):
        board[r][c] = "O" if is_maximizing else "X"
        score = minimax(board, not is_maximizing)
        board[r][c] = " "
        best_score = max(best_score, score) if is_maximizing else min(best_score, score)
    return best_score

def best_move(board):
    best_score = -float("inf")
    move = None
    for r, c in get_empty_cells(board):
        board[r][c] = "O"
        score = minimax(board, False)
        board[r][c] = " "
        if score > best_score:
            best_score = score
            move = (r, c)
    return move

def start_game():
    board = [[" " for _ in range(3)] for _ in range(3)]
    
    print("Welcome to Tic Tac Toe!.")
    print_board(board)

    while True:
        # Player move
        try:
            move = int(input("Enter your move (1-9): ")) - 1
            r, c = divmod(move, 3)
            if board[r][c] != " ":
                print("Cell already occupied, try again.")
                continue
            board[r][c] = "X"
        except (ValueError, IndexError):
            print("Invalid input, try again.")
            continue

        print_board(board)

        if is_winner(board, "X"):
            print("You win!")
            break
        if is_draw(board):
            print("It's a draw!")
            break

        # AI move
        ai_move = best_move(board)
        if ai_move:
            board[ai_move[0]][ai_move[1]] = "O"

        print("AI move:")
        print_board(board)

        if is_winner(board, "O"):
            print("AI wins!")
            break
        if is_draw(board):
            print("It's a draw!")
            break

start_game()

